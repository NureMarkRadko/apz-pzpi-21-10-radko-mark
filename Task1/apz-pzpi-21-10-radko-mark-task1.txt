1 BUSINESS REQUIREMENTS (БІЗНЕС - ВИМОГИ)
1.1	Background (Передумови)

Сучасні ветеринарні клініки стикаються з чисельними викликами в управлінні своїми операціями, особливо, коли йдеться про мережу клінік, філіяли якої знаходяться в різних географічних точках. Відсутність єдиної системи управління призводить до проблем з координацією між клініками, неефективного використання ресурсів та ускладнень у веденні документації. 
Координація графіків лікарів та персоналу, управління запасами медикаментів і обладнання, зростаючі очікування клієнтів щодо якості та швидкості надання ветеринарних послуг вимагають більш досконалих рішень.
З розвитком технологій з’являються нові можливості для оптимізації бізнес процесів у сфері ветеринарії. Інтеграція інформаційних систем дозволяє не лише покращити якість обслуговування пацієнтів, але й значно підвищити ефективність управління клінікою. Завдяки сучасним програмним рішенням ветеринарні клініки можуть автоматизувати рутинні процеси, забезпечити точність і доступність даних, а також поліпшити взаємодію між різними підрозділами та пацієнтами.

1.2	Business Opportunity (Бізнес - можливості)

Ринок ветеринарних послуг демонструє стійке зростання завдяки збільшенню кількості домашніх тварин, зростаючій свідомості власників про необхідність якісного медичного догляду за своїми улюбленцями та розширенню спектру доступних ветеринарних послуг, що призводить до виникання систем – аналогів майбутнього програмного продукту. Роздивемось деякі з них.
По – перше, розглянемо програмну систему Avimark (https://software.covetrus.com/veterinary-solutions/avimark-veterinary appointment-scheduling/), яка є одним з найпопулярніших програмних рішень для управління ветеринарними клініками в Північній Америці. Система пропонує широкий спектр функцій, включаючи управління електронними медичними записами (ЕМЗ), планування зустрічей, управління запасами, фінансовий облік та звітність.
Avimark використовує клієнт-серверну архітектуру, де програмне забезпечення встановлюється на комп'ютери клієнтів, а база даних зберігається на сервері клініки.
Система забезпечує централізоване управління даними, автоматизацію рутинних завдань, інтеграцію з лабораторними та діагностичними системами. Вона також надає інструменти для фінансового обліку та управління запасами, що допомагає оптимізувати операційні процеси.
По – друге, розглянемо систему Cornestone (https://www.inploi.com/integrations/cornerstone), яка є комплексною системою управління ветеринарними клініками та пропонує функціонал для автоматизації процесів, включаючи бухгалтерський облік, управління ЕМЗ, планування та управління клієнтами.
Система побудована на основі локальної архітектури з можливістю розгортання в локальній мережі клініки. Вона також підтримує інтеграцію з хмарними сервісами для забезпечення доступності даних.
Cornerstone фокусується на інтеграції всіх аспектів роботи клініки, включаючи управління фінансами, пацієнтами та запасами. Система автоматизує процеси та забезпечує точність даних через інтеграцію з лабораторними та діагностичними системами.
Іншим аналогом розроблюваної системи є платформа eVetPractice (https://login.evetpractice.com), яка є хмарною платформою для управління ветеринарними клініками та пропонує широкий набір функцій, включаючи мобільний доступ, управління ЕМЗ, планування зустрічей, інтеграцію з лабораторними сервісами та постачальниками.
eVetPractice працює на основі хмарної архітектури, що дозволяє користувачам отримувати доступ до системи через веб-браузер або мобільні додатки. Всі дані зберігаються в хмарному сховищі, що забезпечує їх доступність і захищеність.
Платформа забезпечує мобільність і гнучкість, дозволяючи ветеринарам працювати з будь-якої точки світу з доступом до інтернету. Система інтегрується з лабораторіями та постачальниками, що спрощує управління процесами та запасами. Вона також надає інструменти для аналітики та звітності, що допомагають оптимізувати роботу клініки.
Враховуючи поточні ринкові умови та конкурентну ситуацію, система управління мережею ветеринарних клінік буде використовувати наступні моделі монетизації:
– Підписка (SaaS) – основний дохід може надходити від щомісячних або щорічних підписок на доступ до платформи, що забезпечить стабільний потік доходів та дозволить клієнтам обирати відповідний для них пакет послуг.
– Інтеграції та додаткові модулі – пропонування додаткових платних модулів та інтеграцій з іншими сервісами (лабораторії, аптеки, постачальники медичних товарів) дозволить отримувати додаткові доходи.
– Аналітичні сервіси – преміальна послуга з надання детальних звітів та аналітичних даних, які допомагають клінікам оптимізувати свою роботу та приймати обґрунтовані управлінські рішення. 
Розроблювана програмна система орієнтована на європейський та північноамериканський ринки корпоративних систем, які демонструють високий потенціал для розвитку завдяки наступним факторам:
– Висока концентрація ветеринарних клінік: В обох регіонах існує велика кількість ветеринарних клінік та мереж, що забезпечує значний попит на корпоративні системи управління.
– Зрілість ринку. Ринок ветеринарних послуг у Європі та Північній Америці є високорозвиненим з точки зору технологій та інфраструктури. Це сприяє впровадженню сучасних інформаційних систем.
– Регулювання та стандартизація. В обох регіонах існують суворі регуляторні вимоги щодо ведення медичних записів та управління клініками, що стимулює клініки до використання якісних програмних рішень.
– Сприйнятливість до нових технологій. Клініки в Європі та Північній Америці активно впроваджують нові технології для підвищення ефективності та якості обслуговування пацієнтів.

2 VISION OF SOLUTION (КОНЦЕПЦІЯ РІШЕННЯ)
2.1 Vision Statement (Окреслення концепції)

Метою проекту є розробка та впровадження інноваційної програмної системи управління мережею ветеринарних клінік, яка дозволить ефективно керувати клінічними процесами, забезпечить високу якість обслуговування клієнтів та відповідатиме сучасним вимогам ринку.
Програмна система повинна забезпечити зручний та ефективний облік медичних даних, керувати записами клієнтів та підтримувати планування прийомів. Також потрібно запровадити систему зворотнього зв’язку для підвищення рівня задоволеності клієнтів та підтримувати можливість адаптації продукту до потреб клінік незалежно від їх розміру та структури. Важливим аспектом майбутньої системи є забезпечення можливості інтеграції з іншими  сервісами та платформами для розширення функціональності.

2.2 Major Features (Головна функціональність)

Програмна система управління мережею ветеринарних клінік включає широкий спектр функцій, розроблених для забезпечення ефективного та зручного управління клінічними процесами. Для повноцінної працездатності майбутньої системи має бути реалізований наступний функціонал:
MF – 1 Реєстрація та авторизація користувачів;
MF – 2 Реєстрація мережі ветеринарних клінік у системі та додавання нових клінік;
MF – 3 Оформлення підписки на сервіс;
MF – 4 Управління розкладом лікарів та автоматизація планування прийомів;
MF – 5 Можливість онлайн-запису на прийом для клієнтів через веб-сайт або мобільний додаток;
MF – 6 Зберігання та організація медичних даних пацієнтів;
MF – 7 Автоматизоване введення даних та генерація звітів;
MF – 8 Наявність системи сповіщень та нагадувань про прийоми та медичні процедури;
MF – 9 Ведення фінансової звітності та аналітики;
MF – 10 Генерація детальних звітів про роботу клініки, фінансові показники та ефективність надання послуг;
MF – 11 Система контролю доступу та обліку робочого часу.

3 SCOPE AND LIMITATIONS (РАМКИ ТА ОБМЕЖЕННЯ)
3.1 Scope of Initial Release (Рамки первинного випуску)

Початковий випуск програмної системи управління мережею ветеринарних клінік включатиме основні функції, необхідні для ефективного управління клінічними процесами та забезпечення високої якості обслуговування клієнтів:
Серверна/back-end частина:
IR – 1 Реєстрація. Кожен користувач повинен мати можливість створити акаунт у системі;
IR – 2 Авторизація. Зареєстрований користувач повинен мати змогу увійти в систему, використовуючи свою електронну пошту та пароль;
IR – 3 Оформлення підписки. Зареєстровані користувачі повинні мати можливість оформлення підписки на сервіс;
IR – 4 Додавання мережі. Після оформлення підписки користувачі можуть додати свою мережу до системи;
IR – 5 Додавання працівників. Після додавання мережи до системи акаунт користувача набуває статусу адміністратора. Адміністратор повинен створити акаунти працівників у своїй мережі;
IR – 6 Адміністратор повинен мати можливість розділяти акаунти працівників на лікарів, медсестер та партнерів;
IR – 7 Адміністратор повинен мати доступ до імпорту/експорту даних з бази даних, до створення резервних копій;
IR – 8 Одностороннє шифрування паролів та резервних копій;
IR – 9 Система повинна забезпечувати швидку обробку даних і відповідати на запити користувачів у режимі реального часу;
IR – 10 Система повинна бути здатною до розширення та адаптації до збільшення кількості користувачів та обсягу даних;
IR – 11 Має бути можливість легко додавати нові функціональні можливості без необхідності значних змін у системі;
IR – 12 Адміністратор повинен мати можливість налаштування та адміністрування системи.
Клієнтська/front-end частина:           
IR – 13 Інтерфейс. Користувачі повинні мати зручний та інтуїтивно зрозумілий інтерфейс програмної системи;
IR – 14 Локалізація. Інтерфейс повинен підтримувати англійську та українську мови та можливість перемикання між ними;
IR – 15 Перегляд даних. Інтерфейс адміністратора повинен підтримувати можливість перегляду даних робітників мережі та даних про їх робочий час; 
IR – 16 Запис на прийом. Клієнт повинен мати можливість запису на прийом до лікаря;
IR – 17 Клієнт повинен мати можливість перегляду даних про прийом, медичної картки свого улюбленця та рецепту;
IR – 18 Електронний чек. Клієнт повинен мати можливість формування електронного чеку за надані послуги;
IR – 19 Розклад. Лікар повинен мати можливість перегляду свого розкладу прийомів;
IR – 20 Лікар повинен мати можливість написання електронного рецепту.
IoT пристрої: 
IR – 21  Сканування індивідуального коду працівника та клієнта;
IR – 22 Відправлення коду на серверну частину системи;
IR – 23 Отримання відповіді від серверної частини після відправлення відсканованого коду;
IR – 24 Спрацювання автоматичного турнікету після отримання позитивної відповіді серверної частини.
Мобільний застосунок/Mobile:           
IR – 25 Реєстрація. Кожен користувач повинен мати можливість створити акаунт у системі;
IR – 26 Авторизація. Зареєстрований користувач повинен мати змогу увійти в систему, використовуючи свою електронну пошту та пароль;
IR – 27 Запис на прийом. Клієнт повинен мати можливість запису на прийом до лікаря;
IR – 28 Статус прийому. Клієнт повинен мати можливість перегляду статусу запису до лікаря;
IR – 29 Написання рецептів. Лікар повинен мати можливість написання рецептів;
IR – 30 Розклад прийомів. Лікар повинен мати можливість перегляду розкладу прийомів.

3.2 Scope of Subsequent Releases (Рамки наступних випусків)

Для забезпечення подальшого розвитку та розширення функціональних можливостей програмної системи управління мережею ветеринарних клінік, у наступних випусках планується реалізувати такі функції та покращення:
SR – 1 Інтеграція з додатковими зовнішніми сервісами, такими як постачальники медичного обладнання та програмного забезпечення для управління складськими запасами;
SR – 2 Можливість створення користувацьких звітів для аналізу різних аспектів роботи клініки;
SR – 3 Забезпечення можливості проведення відеоконсультацій між лікарями та клієнтами;
SR – 4 Створення корпоративних чатів між лякарями та клієнтами;
SR – 5 Постійне вдосконалення інтерфейсу для забезпечення зручності та інтуїтивності користування системою;
SR – 6 Локалізація інтерфейсу та документації для різних регіонів;
SR – 7 Впровадження додаткових інструментів для управління графіками роботи, відпустками та навчанням працівників;
SR – 8 Автоматизація процесів оцінки продуктивності та підвищення кваліфікації працівників;
SR – 9 Підключення до різноманітних платіжних шлюзів для зручної оплати послуг клієнтами;
SR – 10 Автоматизація процесів виставлення рахунків та обробки платежів;
SR – 11 Розширення функціональності для покращення взаємодії з клієнтами, включаючи управління зверненнями, нагадування про прийоми та спеціальні пропозиції.

4 BUSINESS CONTEXT (БІЗНЕС - КОНТЕКСТ)
4.3 Operating Environment (Робоче середовище)

Програмна система повинна працювати в наступному робочому середовищі:
OE – 1 Операційна система: Windows 10 або новіша, macOS 10.15 або новіша, сучасні дистрибутиви Linux;
OE – 2 Браузери: Google Chrome 90 або новіша версія, Mozilla Firefox 88 або новіша версія, Safari 14 або новіша версія;
OE – 3 Мобільні платформи: iOS 13 або новіша, Android 9 або новіша;
OE – 4 Підключення: Wi-Fi або Ethernet;
OE – 5 Мережеві вимоги: Постійне підключення до Інтернету зі швидкістю не менше 100 Мбіт/с;
OE – 6 Протоколи: Підтримка стандартів IoT (MQTT, CoAP);
OE – 7 Типи пристроїв: Сканери штрих-кодів, турнікети з  Wi-Fi;
OE – 8 Шифрування: Використання SSL/TLS для захисту даних при передачі;
OE – 9 Захист баз даних: Шифрування даних у базі даних, регулярне створення резервних копій, хешування паролів;
OE – 10 Серверне обладнання: Мінімальні вимоги: 8 ядерний процесор, 32 ГБ оперативної пам'яті, 1 ТБ SSD;
OE – 11 База даних: PostgreSQL 12 або новіша версія;
OE – 12 Серверна\back-end частина буде розроблена на платформі Node.js, з використанням фреймворку Express.js;
OE – 13 Клієнтська\front-end частина буде розроблена за допомогою бібліотеки React з  використанням react-router-dom, Bootstrap та Axios для Http запитів;
OE – 14 IoT або SmartDevice пристрої будуть розроблені за допомогою мови Arduino Sketch;
OE – 15 Mobile застосунок буде розроблений за допомогою мови
програмування Kotlin.

